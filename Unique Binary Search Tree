Given an integer n, return the number of structurally unique BST's (binary search trees) which has exactly n nodes of unique values from 1 to n.

 

Example 1:


Input: n = 3
Output: 5
Example 2:

Input: n = 1
Output: 1
 

Constraints:

1 <= n <= 19

Code:
class Solution {
    public int numTrees(int n) {
            int ans = 0;
       if (n == 0 || n == 1) {
            return 1; // Base case: empty tree or a tree with one node
        } else {
        
            for (int i = 1; i <= n; i++) {
                ans += numTrees(i - 1) * numTrees(n - i);
            }
            
        
    }
    return ans;
    }
}
